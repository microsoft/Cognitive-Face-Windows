<!--
//
// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license.
//
// Microsoft Cognitive Services (formerly Project Oxford): https://www.microsoft.com/cognitive-services
//
// Microsoft Cognitive Services (formerly Project Oxford) GitHub:
// https://github.com/Microsoft/Cognitive-Face-Windows
//
// Copyright (c) Microsoft Corporation
// All rights reserved.
//
// MIT License:
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->

<Page x:Class="Photo_Detect_Catalogue_Search_WPF_App.Controls.FaceIdentificationPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" x:Name="FaceIdentificationPane"
             d:DesignHeight="360" d:DesignWidth="710" Width="710" MinHeight="360" FontSize="14">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="340" />
            <ColumnDefinition Width="30" />
            <ColumnDefinition Width="340" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="45" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock Margin="0,10" Grid.ColumnSpan="3"  HorizontalAlignment="Left" Text="{Binding FaceIdentificationDescription}" TextWrapping="Wrap"></TextBlock>
        <ListView Grid.Column="0" Grid.Row="2" Height="300" Width="330" HorizontalAlignment="Left" VerticalAlignment="Top" BorderBrush="Transparent" ItemsSource="{Binding Persons, ElementName=FaceIdentificationPane}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Style>
                <Style TargetType="ListView">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Image Grid.Column="0" Height="64" Width="64" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0">
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Setter Property="Source" Value="/Photo-Detect-Catalogue-Search-WPF-App;component/Assets/default.jpg" />
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="24" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="8" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding PersonName}" />
                        <ListView Grid.Row="1" ItemsSource="{Binding Faces}" BorderThickness="0" Margin="-6, 0, 0, 0">
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" MaxWidth="310" Margin="-1, -3, -1, -3"></WrapPanel>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Image Width="64" Height="64" Margin="1,3,1,3">
                                        <Image.Source>
                                            <CroppedBitmap Source="{Binding ImageFile}" SourceRect="{Binding UIRect}" />
                                        </Image.Source>
                                    </Image>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsSelected" Value="true">
                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="true"/>
                                                            <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Button Grid.Column="0" Grid.Row="1" Width="300" Height="35" Background="#2196f3" Foreground="White" BorderBrush="Transparent" VerticalAlignment="Top" Margin="0,0,0,0" Content="Load PersonGroup" HorizontalAlignment="Left" Click="FolderPicker_Click"/>
        <Grid Width="300" Height="300" Grid.Column="2" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Top" >
            <ItemsControl HorizontalAlignment="Left" VerticalAlignment="Top" ItemsSource="{Binding TargetFaces, ElementName=FaceIdentificationPane}" Panel.ZIndex="999" Height="{Binding MaxImageSize, ElementName=FaceIdentificationPane}" Width="{Binding MaxImageSize, ElementName=FaceIdentificationPane}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" Height="{Binding MaxImageSize, ElementName=FaceIdentificationPane}" Width="{Binding MaxImageSize, ElementName=FaceIdentificationPane}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas>
                            <Grid  Canvas.Left="{Binding Left}" Canvas.Top="{Binding Top}" Background="#99000000" Height="14" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0, -14, 0, 0">
                                <TextBlock Text="{Binding PersonName}" HorizontalAlignment="Left" Foreground="White" FontSize="11" Height="14" TextWrapping="WrapWithOverflow"/>
                            </Grid>
                            <Rectangle Canvas.Left="{Binding Left}" Canvas.Top="{Binding Top}" Width="{Binding Width}" Height="{Binding Height}" Stroke="#FF26B8F4" StrokeThickness="1" />
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="{Binding MaxImageSize, ElementName=FaceIdentificationPane}" Width="{Binding MaxImageSize, ElementName=FaceDetectionPane}" x:Name="ImageDisplay">
                <Image.Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Source" Value="{Binding SelectedFile, ElementName=FaceIdentificationPane}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedFile, ElementName=FaceIdentificationPane}" Value="{x:Null}">
                                <Setter Property="Source" Value="/Photo-Detect-Catalogue-Search-WPF-App;component/Assets/default.jpg" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Grid>
        <Button Grid.Column="2" Grid.Row="1" Content="Choose Image" Width="300" Height="35" BorderBrush="Transparent" Foreground="White" Background="#2196f3" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0, 0, 0, 0" IsEnabled="False" Name="IdentifyButton" Click="Identify_Click"/>
    </Grid>
</Page>
